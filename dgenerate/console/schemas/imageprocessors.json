{"anyline": {"gaussian-sigma": {"optional": false, "types": ["float"], "default": 2.0}, "intensity-threshold": {"optional": false, "types": ["int"], "default": 2}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "anyline:\n    arguments:\n        gaussian-sigma: float = 2.0\n        intensity-threshold: int = 2\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    anyline, MistoLine Control Every Line image preprocessor, see:\n    https://huggingface.co/TheMistoAI/MistoLine\n\n    This is an edge detector based on TEED.\n\n    The argument \"gaussian-sigma\" is the gaussian filter sigma value.\n\n    The argument \"intensity-threshold\" is the pixel value intensity threshold.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect_resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "canny": {"lower": {"optional": false, "types": ["int"], "default": 50}, "upper": {"optional": false, "types": ["int"], "default": 100}, "aperture-size": {"optional": false, "types": ["int"], "default": 3}, "L2-gradient": {"optional": false, "types": ["bool"], "default": false}, "blur": {"optional": false, "types": ["bool"], "default": false}, "gray": {"optional": false, "types": ["bool"], "default": false}, "threshold-algo": {"optional": true, "types": ["str"], "default": null}, "sigma": {"optional": false, "types": ["float"], "default": 0.33}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "canny:\n    arguments:\n        lower: int = 50\n        upper: int = 100\n        aperture-size: int = 3\n        L2-gradient: bool = False\n        blur: bool = False\n        gray: bool = False\n        threshold-algo: Optional[str] = None\n        sigma: float = 0.33\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Process the input image with the Canny edge detection algorithm.\n\n    The \"lower\" argument indicates the lower threshold value for the algorithm, and the \"upper\"\n    argument indicates the upper threshold. \"aperture-size\" is the size of Sobel kernel used for\n    find image gradients, it must be an odd integer from 3 to 7. \"L2-gradient\" specifies the\n    equation for finding gradient magnitude, if True a more accurate equation is used. See:\n    https://docs.opencv.org/3.4/da/d22/tutorial_py_canny.html.\n\n    If \"blur\" is true, apply a 3x3 gaussian blur before processing. If \"gray\" is true, convert the\n    image to the cv2 \"GRAY\" format before processing, which does not happen automatically unless you\n    are using a \"threshold_algo\" value, OpenCV is capable of edge detection on colored images,\n    however you may find better results by converting to its internal grayscale format before\n    processing, or you may not, it depends.\n\n    If \"threshold_algo\" is one of (\"otsu\", \"triangle\", \"median\") try to calculate the lower and\n    upper threshold automatically using cv2.threshold or cv2.median in the case of \"median\". \"sigma\"\n    scales the range of the automatic threshold calculation done when a value for \"threshold_algo\"\n    is selected. \"pre-resize\" is a boolean value determining if the processing should take place\n    before or after the image is resized by dgenerate.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "flip": {"pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "flip:\n    arguments:\n        pre-resize: bool = False\n\n    Flip the input image vertically."}, "grayscale": {"pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "grayscale:\n    arguments:\n        pre-resize: bool = False\n\n    Convert the input image to grayscale."}, "hed": {"scribble": {"optional": false, "types": ["bool"], "default": false}, "safe": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "hed:\n    arguments:\n        scribble: bool = False\n        safe: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    HED detection (holistically-nested edge detection), this is an edge detection algorithm that can\n    produced something akin to thick lineart.\n\n    The \"scribble\" argument determines whether scribble mode is enabled, this produces thicker\n    lines.\n\n    The \"safe\" argument enables or disables numerically safe / more precise stepping.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect_resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect_resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "invert": {"pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "invert:\n    arguments:\n        pre-resize: bool = False\n\n    Invert the colors of the input image."}, "leres": {"threshold-near": {"optional": false, "types": ["int"], "default": 0}, "threshold-far": {"optional": false, "types": ["int"], "default": 0}, "boost": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "leres:\n    arguments:\n        threshold-near: int = 0\n        threshold-far: int = 0\n        boost: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        pre-resize: bool = False\n\n    LeReS depth detector.\n\n    The \"threshold-near\" argument is the near threshold, think the low threshold of canny.\n\n    The \"threshold-far\" argument is the far threshold, think the high threshold of canny.\n\n    The \"boost\" argument determines if monocular depth boost is used.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "letterbox": {"box-size": {"optional": false, "types": ["str"]}, "box-is-padding": {"optional": false, "types": ["bool"], "default": false}, "box-color": {"optional": true, "types": ["str"], "default": null}, "inner-size": {"optional": true, "types": ["str"], "default": null}, "aspect-correct": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "letterbox:\n    arguments:\n        box-size: str\n        box-is-padding: bool = False\n        box-color: Optional[str] = None\n        inner-size: Optional[str] = None\n        aspect-correct: bool = True\n        pre-resize: bool = False\n\n    Letterbox an image.\n\n    The \"box-size\" argument is the size of the outer letterbox\n\n    The \"box-is-padding\" argument can be used to indicate that \"box-size\" should be interpreted as\n    padding.\n\n    The \"box-color\" argument specifies the color to use for the letter box background, the default\n    is black. This should be specified as a HEX color code.\n\n    The \"inner-size\" argument specifies the size of the inner image.\n\n    The \"aspect-correct\" argument can be used to determine if the aspect ratio of the inner image is\n    maintained or not.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "lineart": {"course": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "lineart:\n    arguments:\n        course: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Line art generator, generate line art from an image.\n\n    The argument \"course\" determines whether to use the course model or the normal model.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "lineart-anime": {"detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "lineart-anime:\n    arguments:\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Anime line art generator, generate anime line art from an image.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "lineart-standard": {"gaussian-sigma": {"optional": false, "types": ["float"], "default": 6.0}, "intensity-threshold": {"optional": false, "types": ["int"], "default": 8}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "lineart-standard:\n    arguments:\n        gaussian-sigma: float = 6.0\n        intensity-threshold: int = 8\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Standard lineart detector, generate lineart from an image.\n\n    The argument \"gaussian-sigma\" is the gaussian filter sigma value.\n\n    The argument \"intensity-threshold\" is the pixel value intensity threshold.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "midas": {"normals": {"optional": false, "types": ["bool"], "default": false}, "alpha": {"optional": false, "types": ["float"], "default": 6.283185307179586}, "background-threshold": {"optional": false, "types": ["float"], "default": 0.1}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "midas:\n    arguments:\n        normals: bool = False\n        alpha: float = 6.283185307179586\n        background-threshold: float = 0.1\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        pre-resize: bool = False\n\n    MiDaS depth detector and normal map generation.\n\n    The argument \"normals\" determines if this processor produces a normal map or a depth image.\n\n    The argument \"alpha\" is related to normal map generation.\n\n    The argument \"background_threshold\" is related to normal map generation.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect_resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "mirror": {"pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "mirror:\n    arguments:\n        pre-resize: bool = False\n\n    Mirror the input image horizontally."}, "mlsd": {"threshold-score": {"optional": false, "types": ["float"], "default": 0.1}, "threshold-distance": {"optional": false, "types": ["float"], "default": 0.1}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "mlsd:\n    arguments:\n        threshold-score: float = 0.1\n        threshold-distance: float = 0.1\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Machine Learning Model for Detecting Wireframes.  Wireframe edge detector, this processor\n    overlays lines on to the edges of objects in an image.\n\n    The \"threshold-score\" argument is the score threshold.\n\n    The \"threshold-distance\" argument is the distance threshold.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "normal-bae": {"detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "normal-bae:\n    arguments:\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        pre-resize: bool = False\n\n    Normal Bae Detector, generate a normal map from an image.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "openpose": {"include-body": {"optional": false, "types": ["bool"], "default": true}, "include-hand": {"optional": false, "types": ["bool"], "default": false}, "include-face": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "openpose:\n    arguments:\n        include-body: bool = True\n        include-hand: bool = False\n        include-face: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Generate an OpenPose rigging from the input image (of a human/humanoid) for use with a\n    ControlNet.\n\n    \"include-body\" is a boolean value indicating if a body rigging should be generated.\n\n    \"include-hand\" is a boolean value indicating if a detailed hand/finger rigging should be\n    generated.\n\n    \"include-face\" is a boolean value indicating if a detailed face rigging should be generated.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "pidi": {"apply-filter": {"optional": false, "types": ["bool"], "default": false}, "safe": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "pidi:\n    arguments:\n        apply-filter: bool = False\n        safe: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    PidiNet (Pixel Difference Networks for Efficient Edge Detection) edge detector.\n\n    The \"apply-filter\" argument enables possibly crisper edges / less noise.\n\n    The \"safe\" argument enables or disables numerically safe / more precise stepping.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "posterize": {"bits": {"optional": false, "types": ["int"]}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "posterize:\n    arguments:\n        bits: int\n        pre-resize: bool = False\n\n    Posterize the input image with PIL.ImageOps.posterize.\n\n    Accepts the argument 'bits', an integer value from 1 to 8.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "sam": {"detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "detect-align": {"optional": false, "types": ["int"], "default": 1}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "sam:\n    arguments:\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        detect-align: int = 1\n        pre-resize: bool = False\n\n    Segment Anything Model, this processor attempts to creates cutouts for every distinct objects in\n    an image.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect-resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The argument \"detect-align\" determines the pixel alignment of the image resize requested by\n    \"detect-resolution\", it defaults to 1 indicating no requested alignment.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "solarize": {"threshold": {"optional": false, "types": ["int"], "default": 128}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "solarize:\n    arguments:\n        threshold: int = 128\n        pre-resize: bool = False\n\n    Solarize the input image with PIL.ImageOps.solarize.\n\n    Accepts the argument \"threshold\" which is an integer value from 0 to 255.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "teed": {"safe": {"optional": false, "types": ["bool"], "default": true}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "teed:\n    arguments:\n        safe: bool = True\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        pre-resize: bool = False\n\n    teed, a (tiny efficient edge detector).\n\n    The \"safe\" argument enables or disables numerically safe / more precise stepping.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect_resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}, "upscaler": {"model": {"optional": false, "types": ["str"]}, "tile": {"types": ["str", "int"], "default": 512}, "overlap": {"optional": false, "types": ["int"], "default": 32}, "force-tiling": {"optional": false, "types": ["bool"], "default": false}, "dtype": {"optional": false, "types": ["str"], "default": "float32"}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "upscaler:\n    arguments:\n        model: str\n        tile: Union[int, str] = 512\n        overlap: int = 32\n        force-tiling: bool = False\n        dtype: str = \"float32\"\n        pre-resize: bool = False\n\n    Implements tiled upscaling with chaiNNer compatible upscaler models.\n\n    The \"model\" argument should be a path to a chaiNNer compatible upscaler model on disk, such as a\n    model downloaded from https://openmodeldb.info/, or an HTTP/HTTPS URL that points to a raw model\n    file.\n\n    For example:\n    \"upscaler;model=https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.5.0/realesr-general-x4v3.pth\"\n\n    Downloaded models are cached in the dgenerate web cache on disk until the cache expiry time for\n    the file is met.\n\n    The \"tile\" argument can be used to specify the tile size for tiled upscaling, it must be\n    divisible by 2, and defaults to 512. Specifying 'auto' indicates that this value should be\n    calculated based off available GPU memory if applicable. Specifying 0 disables tiling entirely.\n\n    The \"overlap\" argument can be used to specify the overlap amount of each tile in pixels, it must\n    be greater than or equal to 0, and defaults to 32.\n\n    The \"force-tiling\" argument can be used to force external image tiling for upscaler model\n    architectures which discourage the use of external tiling (SCUNEt and MixDehazeNet currently),\n    this may mean that the model needs information about the whole image to achieve a good result.\n    External tiling breaks up the image into tiles before feeding it to the model and reassembles\n    the images output by the model, this is not the default behavior when a model specifies that\n    tiling is discouraged, tiling is only on by default for models where external tiling is fully\n    supported. Only use this if you run into memory issues with models that discourage external\n    tiling, in the case that the model discourages its use, using it may result in substandard image\n    output.\n\n    The \"dtype\" argument can be used to specify the datatype to use to for the model in memory, it\n    can be either \"float32\" or \"float16\". Using \"float16\" will result in a smaller memory footprint\n    if supported.\n\n    The \"pre-resize\" argument is a boolean value determining if the processing should take place\n    before or after the image is resized by dgenerate.\n\n    Example: \"upscaler;model=my-model.pth;tile=256;overlap=16\""}, "zoe": {"gamma-corrected": {"optional": false, "types": ["bool"], "default": false}, "detect-resolution": {"optional": true, "types": ["str"], "default": null}, "detect-aspect": {"optional": false, "types": ["bool"], "default": true}, "pre-resize": {"optional": false, "types": ["bool"], "default": false}, "PROCESSOR_HELP": "zoe:\n    arguments:\n        gamma-corrected: bool = False\n        detect-resolution: Optional[str] = None\n        detect-aspect: bool = True\n        pre-resize: bool = False\n\n    zoe depth detector, a SOTA depth estimation model which produces high-quality depth maps.\n\n    The argument \"gamma-corrected\" determines if gamma correction is preformed on the produced depth\n    math.\n\n    The argument \"detect-resolution\" is the resolution the image is resized to internal to the\n    processor before detection is run on it. It should be a single dimension for example:\n    \"detect-resolution=512\" or the X/Y dimensions seperated by an \"x\" character, like so:\n    \"detect-resolution=1024x512\". If you do not specify this argument, the detector runs on the\n    input image at its full resolution. After processing the image will be resized to whatever you\n    have requested dgenerate resize it to via --output-size or --resize/--align in the case of the\n    image-process sub-command, if you have not requested any resizing the output will be resized\n    back to the original size of the input image.\n\n    The argument \"detect-aspect\" determines if the image resize requested by \"detect_resolution\"\n    before detection runs is aspect correct, this defaults to true.\n\n    The \"pre-resize\" argument determines if the processing occurs before or after dgenerate resizes\n    the image. This defaults to False, meaning the image is processed after dgenerate is done\n    resizing it."}}