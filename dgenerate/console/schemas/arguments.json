{"--verbose": "Output information useful for debugging, such as pipeline call and model load parameters.", "--version": "Show dgenerate's version and exit", "--file": "Convenience argument for reading a configuration script from a file instead of using a pipe. This is\na meta argument which can not be used within a configuration script and is only valid from the\ncommand line or during a popen invocation of dgenerate.", "--shell": "When reading configuration from STDIN (a pipe), read forever, even when configuration errors occur.\nThis allows dgenerate to run in the background and be controlled by another process sending\ncommands. Launching dgenerate with this option and not piping it input will attach it to the\nterminal like a shell. Entering configuration into this shell requires two newlines to submit a\ncommand due to parsing lookahead. IE: two presses of the enter key. This is a meta argument which\ncan not be used within a configuration script and is only valid from the command line or during a\npopen invocation of dgenerate.", "--no-stdin": "Can be used to indicate to dgenerate that it will not receive any piped in input. This is useful for\nrunning dgenerate via popen from Python or another application using normal arguments, where it\nwould otherwise try to read from STDIN and block forever because it is not attached to a terminal.\nThis is a meta argument which can not be used within a configuration script and is only valid from\nthe command line or during a popen invocation of dgenerate.", "--console": "Launch a terminal-like Tkinter GUI that interacts with an instance of dgenerate running in the\nbackground. This allows you to interactively write dgenerate config scripts as if dgenerate were a\nshell / REPL. This is a meta argument which can not be used within a configuration script and is\nonly valid from the command line or during a popen invocation of dgenerate.", "--plugin-modules": "Specify one or more plugin module folder paths (folder containing __init__.py) or Python .py file\npaths, or Python module names to load as plugins. Plugin modules can currently implement image\nprocessors, config directives, config template functions, prompt weighters, and sub-commands.", "--sub-command": "Specify the name a sub-command to invoke. dgenerate exposes some extra image processing\nfunctionality through the use of sub-commands. Sub commands essentially replace the entire set of\naccepted arguments with those of a sub-command which implements additional functionality. See\n--sub-command-help for a list of sub-commands and help.", "--sub-command-help": "Use this option alone (or with --plugin-modules) and no model specification in order to list\navailable sub-command names. Calling a sub-command with \"--sub-command name --help\" will produce\nargument help output for that sub-command. When used with --plugin-modules, sub-commands implemented\nby the specified plugins will also be listed.", "--offline-mode": "Whether dgenerate should try to download Hugging Face models that do not exist in the disk cache, or\nonly use what is available in the cache. Referencing a model on Hugging Face that has not been\ncached because it was not previously downloaded will result in a failure when using this option.", "--templates-help": "Print a list of template variables available in the interpreter environment used for dgenerate\nconfig scripts, particularly the variables set after a dgenerate invocation occurs. When used as a\ncommand line option, their values are not presented, just their names and types. Specifying names\nwill print type information for those variable names.", "--directives-help": "Use this option alone (or with --plugin-modules) and no model specification in order to list\navailable config directive names. Providing names will print documentation for the specified\ndirective names. When used with --plugin-modules, directives implemented by the specified plugins\nwill also be listed.", "--functions-help": "Use this option alone (or with --plugin-modules) and no model specification in order to list\navailable config template function names. Providing names will print documentation for the specified\nfunction names. When used with --plugin-modules, functions implemented by the specified plugins will\nalso be listed.", "--model-type": "Use when loading different model types. Currently supported: torch, torch-pix2pix, torch-sdxl,\ntorch-sdxl-pix2pix, torch-kolors, torch-upscaler-x2, torch-upscaler-x4, torch-if, torch-ifs,\ntorch-ifs-img2img, torch-s-cascade, torch-sd3, torch-flux, or torch-flux-fill. (default: torch)", "--revision": "The model revision to use when loading from a Hugging Face repository, (The Git branch / tag,\ndefault is \"main\")", "--variant": "If specified when loading from a Hugging Face repository or folder, load weights from \"variant\"\nfilename, e.g. \"pytorch_model.<variant>.safetensors\". Defaults to automatic selection.", "--subfolder": "Main model subfolder. If specified when loading from a Hugging Face repository or folder, load\nweights from the specified subfolder.", "--original-config": "This argument can be used to supply an original LDM config .yaml file  that was provided with a\nsingle file checkpoint.", "--original-config2": "This argument can be used to supply an original LDM config .yaml file  that was provided with a\nsingle file checkpoint for the secondary model,  i.e. the SDXL Refiner or Stable Cascade Decoder.", "--auth-token": "Huggingface auth token. Required to download restricted repositories that have access permissions\ngranted to your Hugging Face account.", "--batch-size": "The number of image variations to produce per set of individual diffusion parameters in one\nrendering step simultaneously on a single GPU.\n\nWhen generating animations with a --batch-size greater than one, a separate animation (with the\nfilename suffix \"animation_N\") will be written to for each image in the batch.\n\nIf --batch-grid-size is specified when producing an animation then the image grid is used for the\noutput frames.\n\nDuring animation rendering each image in the batch will still be  written to the output directory\nalong side the produced animation as either suffixed files or image grids depending on the options\nyou choose. (Default: 1)", "--batch-grid-size": "Produce a single image containing a grid of images with the number of COLUMNSxROWS given to this\nargument when --batch-size is greater than 1. If not specified with a --batch-size greater than 1,\nimages will be written individually with an image number suffix (image_N) in the filename signifying\nwhich image in the batch they are.", "--adetailer-detectors": "Specify one or more adetailer YOLO detector model URIs. When specifying this option,  you must\nprovide an image to --image-seeds, inpaint masks will be auto generated  based on what is detected\nby the provided detector models.\n\nThe models will be used in sequence to detect and then inpaint your image within the detection\nareas. This can be used for face detailing, face swapping, hand detailing,  etc. on any arbitrary\nimage provided using an image generation model of your choice.\n\nThis option supports: --model-type torch, torch-sdxl, torch-kolors, torch-sd3, torch-flux, and\ntorch-flux-fill\n\nExample: --adetailer-detectors Bingsu/adetailer;weight-name=face_yolov8n.pt\n\nThe \"revision\" argument specifies the model revision to use for the adetailer model when loading\nfrom Hugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"subfolder\" argument specifies the adetailer model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"weight-name\" argument indicates the name of the weights file to be loaded when loading from a\nHugging Face repository or folder on disk.\n\nThe \"index-filter\" (overrides --adetailer-index-filter) argument is a list values or a single value\nthat indicates what YOLO detection indices to keep, the index values start at zero. Detections are\nsorted by their top left bounding box coordinate from left to right,  top to bottom, by (confidence\ndescending). The order of detections in the image is identical to the reading order of words on a\npage (english). Inpainting will only be preformed on the  specified detection indices, if no indices\nare specified, then inpainting will be preformed on all detections.\n\nExample \"index-filter\" values:\n\n    * keep the first, leftmost, topmost detection:     index-filter=0\n\n    * keep detections 1 and 3:     index-filter=[1, 3]\n\n    * CSV syntax is supported (tuple):     index-filter=1,3\n\nThe \"detector-padding\" (overrides --adetailer-detector-paddings) argument specifies the amount of\npadding that will be added to the detection  rectangle which is used to generate a masked area. The\ndefault is 0, you can  make the mask area around the detected feature larger with positive padding\nand smaller with negative padding.\n\nPadding examples:\n\n    32 (32px Uniform, all sides)\n\n    10x20 (10px Horizontal, 20px Vertical)\n\n    10x20x30x40 (10px Left, 20px Top, 30px Right, 40px Bottom)\n\nThe \"mask-padding\" (overrides --adetailer-mask-paddings) argument indicates how  much padding to\nplace around the masked area when cropping out the image to be  inpainted. This value must be large\nenough to accommodate any feathering on the  edge of the mask caused by \"mask-blur\" or\n\"mask-dilation\" for the best result,  the default value is 32. The syntax for specifying this value\nis identical  to \"detector-padding\".\n\nThe \"mask-shape\" (overrides --adetailer-mask-shapes) argument indicates  what mask shape adetailer\nshould attempt to draw around a detected feature,  the default value is \"rectangle\". You may also\nspecify \"circle\" to generate  an ellipsoid shaped mask, which might be helpful for achieving better\nblending.\n\nThe \"mask-blur\" (overrides --adetailer-mask-blurs) argument indicates the  level of gaussian blur to\napply to the generated inpaint mask, which  can help with smooth blending in of the inpainted\nfeature\n\nThe \"mask-dilation\" (overrides --adetailer-mask-dilations) argument  indicates the amount of\ndilation applied to the inpaint mask, see: cv2.dilate\n\nThe \"confidence\" argument indicates the confidence value to use with the YOLO  detector model, this\nvalue defaults to 0.3 if not specified.\n\nThe \"prompt\" (overrides --prompt positive) argument overrides the positive inpainting prompt for\ndetections by this detector.\n\nThe \"negative-prompt\" (overrides --prompt negative) argument overrides the negative inpainting\nprompt for detections by this detector.\n\nThe \"device\" argument indicates a device override for the YOLO detector model, the  detector model\ncan be set to run on a different device if desired, for example:  cuda:0, cuda:1, cpu, etc. It runs\non the same device as --device by default.\n\nIf you wish to load a weights file directly from disk, use: --adetailer-detectors \"yolo_model.pt\"\n\nYou may also load a YOLO model directly from a URL or Hugging Face blob link.\n\nExample: --adetailer-detectors https://modelsite.com/yolo-model.pt", "--adetailer-index-filter": "A list index values that indicates what adetailer YOLO detection indices to keep,  the index values\nstart at zero. Detections are sorted by their top left bounding box  coordinate from left to right,\ntop to bottom, by (confidence descending). The order of  detections in the image is identical to the\nreading order of words on a page (english).  Inpainting will only be preformed on the specified\ndetection indices, if no indices  are specified, then inpainting will be preformed on all\ndetections.", "--adetailer-mask-shapes": "One or more adetailer mask shapes to try. This indicates what mask shape  adetailer should attempt\nto draw around a detected feature, the default value is  \"rectangle\". You may also specify \"circle\"\nto generate an ellipsoid shaped mask,  which might be helpful for achieving better blending.\n(default: rectangle).", "--adetailer-detector-paddings": "One or more adetailer detector padding values to try. This value specifies the  amount of padding\nthat will be added to the detection rectangle which is used to generate a masked area. The default\nis 0, you can make the mask area around the  detected feature larger with positive padding and\nsmaller with negative padding.\n\nExample:\n\n32 (32px Uniform, all sides)\n\n10x20 (10px Horizontal, 20px Vertical)\n\n10x20x30x40 (10px Left, 20px Top, 30px Right, 40px Bottom)\n\n(default: 0).", "--adetailer-mask-paddings": "One or more adetailer mask padding values to try. This value indicates how much padding to place\naround the masked area when  cropping out the image to be inpainted, this value must be large enough\nto accommodate any feathering on the edge of the mask caused by \"--adetailer-mask-blurs\" or\n\"--adetailer-mask-dilations\"  for the best result.\n\nExample:\n\n32 (32px Uniform, all sides)\n\n10x20 (10px Horizontal, 20px Vertical)\n\n10x20x30x40 (10px Left, 20px Top, 30px Right, 40px Bottom)\n\n(default: 32).", "--adetailer-mask-blurs": "The level of gaussian blur to apply to the generated adetailer inpaint mask, which can help with\nsmooth blending in of the inpainted feature. (default: 4)", "--adetailer-mask-dilations": "The amount of dilation applied to the adetailer inpaint mask, see: cv2.dilate. (default: 4)", "--adetailer-crop-control-image": "Should adetailer crop ControlNet control images to the feature detection area?  Your input image and\ncontrol image should be the the same dimension, otherwise  this argument is ignored with a warning.\nWhen this argument is not specified,  the control image provided is simply resized to the same size\nas the  detection area.", "--text-encoders": "Specify Text Encoders for the main model using URIs, main models may use one or more text encoders\ndepending on the --model-type value and other dgenerate arguments. See: --text-encoders help for\ninformation about what text encoders are needed for your invocation.\n\nExamples: \"CLIPTextModel;model=huggingface/text_encoder\",\n\"CLIPTextModelWithProjection;model=huggingface/text_encoder;revision=main\",\n\"T5EncoderModel;model=text_encoder_folder_on_disk\".\n\nFor main models which require multiple text encoders, the + symbol may be used to indicate that a\ndefault value should be used for a particular text encoder, for example: --text-encoders + +\nhuggingface/encoder3.  Any trailing text encoders which are not specified are given their default\nvalue.\n\nThe value \"null\" may be used to indicate that a specific text encoder should not be loaded.\n\nThe \"revision\" argument specifies the model revision to use for the Text Encoder when loading from\nHugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the Text Encoder model variant. If \"variant\" is specified when\nloading from a Hugging Face repository or folder, weights will be loaded from \"variant\" filename,\ne.g. \"pytorch_model.<variant>.safetensors\". For this argument, \"variant\" defaults to the value of\n--variant if it is not specified in the URI.\n\nThe \"subfolder\" argument specifies the Text Encoder model subfolder, if specified when loading  from\na Hugging Face repository or folder, weights from the specified subfolder. If you are  loading from\na combined single file checkpoint containing multiple components, this value  will be used to\ndetermine the key in the checkpoint that contains the text encoder, by default  \"text_encoder\" is\nused if subfolder is not provided.\n\nThe \"dtype\" argument specifies the Text Encoder model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nThe \"quantizer\" argument specifies a quantization backend and configuration for the Text Encoder\nmodel individually, and uses the same URI syntax as --quantizer.  If working from the command line\nyou may need to nested quote this URI, i.e:\n\n--text-encoders 'CLIPTextModel;model=huggingface/text_encoder;quantizer=\"bnb;bits=8\"'\n\nIf you wish to load weights directly from a path on disk, you must point this argument at the folder\nthey exist in, which should also contain the config.json file for the Text Encoder. For example, a\ndownloaded repository folder from Hugging Face.", "--text-encoders2": "--text-encoders but for the SDXL refiner or Stable Cascade decoder model.", "--unet": "Specify a UNet using a URI.\n\nExamples: \"huggingface/unet\", \"huggingface/unet;revision=main\", \"unet_folder_on_disk\".\n\nThe \"revision\" argument specifies the model revision to use for the UNet when loading from Hugging\nFace repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the UNet model variant. If \"variant\" is specified when loading from\na Hugging Face repository or folder, weights will be loaded from \"variant\" filename, e.g.\n\"pytorch_model.<variant>.safetensors. For this argument, \"variant\" defaults to the value of\n--variant if it is not specified in the URI.\n\nThe \"subfolder\" argument specifies the UNet model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder. If you are loading from a\ncombined single file checkpoint containing multiple components, this value will be  used to\ndetermine the key in the checkpoint that contains the unet, by default \"unet\" is  used if subfolder\nis not provided.\n\nThe \"dtype\" argument specifies the UNet model precision, it defaults to the value of -t/--dtype and\nshould be one of: auto, bfloat16, float16, or float32.\n\nThe \"quantizer\" argument specifies a quantization backend and configuration for the UNet model\nindividually, and uses the same URI syntax as --quantizer.  If working from the command line you may\nneed to nested quote this URI, i.e:\n\n--unet 'huggingface/unet;quantizer=\"bnb;bits=8\"'\n\nIf you wish to load weights directly from a path on disk, you must point this argument at the folder\nthey exist in, which should also contain the config.json file for the UNet. For example, a\ndownloaded repository folder from Hugging Face.", "--unet2": "Specify a second UNet, this is only valid when using SDXL or Stable Cascade model types. This UNet\nwill be used for the SDXL refiner, or Stable Cascade decoder model.", "--transformer": "Specify a Stable Diffusion 3 or Flux Transformer model using a URI.\n\nExamples: \"huggingface/transformer\", \"huggingface/transformer;revision=main\",\n\"transformer_folder_on_disk\".\n\nBlob links / single file loads are supported for SD3 Transformers.\n\nThe \"revision\" argument specifies the model revision to use for the Transformer when loading from\nHugging Face repository or blob link, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the Transformer model variant. If \"variant\" is specified when\nloading from a Hugging Face repository or folder, weights will be loaded from \"variant\" filename,\ne.g. \"pytorch_model.<variant>.safetensors. For this argument, \"variant\" defaults to the value of\n--variant if it is not specified in the URI.\n\nThe \"subfolder\" argument specifies the Transformer model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the Transformer model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nThe \"quantizer\" argument specifies a quantization backend and configuration for the Transformer\nmodel individually, and uses the same URI syntax as --quantizer.  If working from the command line\nyou may need to nested quote this URI, i.e:\n\n--transformer 'huggingface/transformer;quantizer=\"bnb;bits=8\"'\n\nIf you wish to load a weights file directly from disk, the simplest way is: --transformer\n\"transformer.safetensors\", or with a dtype \"transformer.safetensors;dtype=float16\". All loading\narguments except \"dtype\" and \"quantizer\" are unused in this case and may produce an error message if\nused.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --transformer\n\"AutoencoderKL;https://huggingface.co/UserName/repository-name/blob/main/transformer.safetensors\",\nthe \"revision\" argument may be used with this syntax.", "--vae": "Specify a VAE using a URI, the URI syntax is:  \"AutoEncoderClass;model=(Hugging Face repository\nslug/blob link or file/folder path)\".\n\nExamples: \"AutoencoderKL;model=vae.pt\", \"AsymmetricAutoencoderKL;model=huggingface/vae\",\n\"AutoencoderTiny;model=huggingface/vae\", \"ConsistencyDecoderVAE;model=huggingface/vae\".\n\nThe AutoencoderKL encoder class accepts Hugging Face repository slugs/blob links, .pt, .pth, .bin,\n.ckpt, and .safetensors files.\n\nOther encoders can only accept Hugging Face repository slugs/blob links, or a path to a folder on\ndisk with the model configuration and model file(s).\n\nIf an AutoencoderKL VAE model file exists at a URL which serves the file as a raw download, you may\nprovide an http/https link to it and it will be downloaded to dgenerates web cache.\n\nAside from the \"model\" argument, there are four other optional arguments that can be specified,\nthese are: \"revision\", \"variant\", \"subfolder\", \"dtype\".\n\nThey can be specified as so in any order, they are not positional:\n\"AutoencoderKL;model=huggingface/vae;revision=main;variant=fp16;subfolder=sub_folder;dtype=float16\".\n\nThe \"revision\" argument specifies the model revision to use for the VAE when loading from Hugging\nFace repository or blob link, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the VAE model variant. If \"variant\" is specified when loading from\na Hugging Face repository or folder, weights will be loaded from \"variant\" filename, e.g.\n\"pytorch_model.<variant>.safetensors. \"variant\" in the case of --vae does not default to the value\nof --variant to prevent failures during common use cases.\n\nThe \"subfolder\" argument specifies the VAE model subfolder, if specified when loading from a Hugging\nFace repository or folder, weights from the specified subfolder.\n\nThe \"extract\" argument specifies that \"model\" points at a combind single file  checkpoint containing\nmultiple components such as the UNet and Text Encoders, and  that we should extract the VAE.  When\nusing this argument you can use \"subfolder\" to indicate the key in the checkpoint containing the\nmodel, this defaults to \"vae\".\n\nThe \"dtype\" argument specifies the VAE model precision, it defaults to the value of -t/--dtype and\nshould be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load a weights file directly from disk, the simplest way is: --vae\n\"AutoencoderKL;my_vae.safetensors\", or with a dtype\n\"AutoencoderKL;my_vae.safetensors;dtype=float16\". All loading arguments except \"dtype\" are unused in\nthis case and may produce an error message if used.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --vae\n\"AutoencoderKL;https://huggingface.co/UserName/repository-name/blob/main/vae_model.safetensors\", the\n\"revision\" argument may be used with this syntax.", "--vae-tiling": "Enable VAE tiling. Assists in the generation of large images with lower memory overhead. The VAE\nwill split the input tensor into tiles to compute decoding and encoding in several steps. This is\nuseful for saving a large amount of memory and to allow processing larger images. Note that if you\nare using --control-nets you may still run into memory issues generating large images, or with\n--batch-size greater than 1.", "--vae-slicing": "Enable VAE slicing. Assists in the generation of large images with lower memory overhead. The VAE\nwill split the input tensor in slices to compute decoding in several steps. This is useful to save\nsome memory, especially when --batch-size is greater than 1. Note that if you are using\n--control-nets you may still run into memory issues generating large images.", "--loras": "Specify one or more LoRA models using URIs. These should be a Hugging Face repository slug, path to\nmodel file on disk (for example, a .pt, .pth, .bin, .ckpt, or .safetensors file), or model folder\ncontaining model files.\n\nIf a LoRA model file exists at a URL which serves the file as a raw download, you may provide an\nhttp/https link to it and it will be downloaded to dgenerates web cache.\n\nHugging Face blob links are not supported, see \"subfolder\" and \"weight-name\" below instead.\n\nOptional arguments can be provided after a LoRA model specification, these are: \"scale\", \"revision\",\n\"subfolder\", and \"weight-name\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/lora;scale=1.0;revision=main;subfolder=repo_subfolder;weight-name=lora.safetensors\".\n\nThe \"scale\" argument indicates the scale factor of the LoRA.\n\nThe \"revision\" argument specifies the model revision to use for the LoRA when loading from Hugging\nFace repository, (The Git branch / tag, default is \"main\").\n\nThe \"subfolder\" argument specifies the LoRA model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"weight-name\" argument indicates the name of the weights file to be loaded when loading from a\nHugging Face repository or folder on disk.\n\nIf you wish to load a weights file directly from disk, the simplest way is: --loras\n\"my_lora.safetensors\", or with a scale \"my_lora.safetensors;scale=1.0\", all other loading arguments\nare unused in this case and may produce an error message if used.", "--lora-fuse-scale": "LoRA weights are merged into the main model at this scale.  When specifying multiple LoRA models,\nthey are fused together into one set of weights using their individual scale values, after which\nthey are fused into the main model at this scale value. (default: 1.0).", "--image-encoder": "Specify an Image Encoder using a URI.\n\nImage Encoders are used with --ip-adapters models, and must be specified if none of the loaded\n--ip-adapters contain one.  An error will be produced in this situation, which requires you to use\nthis argument.\n\nAn image encoder can also be manually specified for Stable Cascade models.\n\nExamples: \"huggingface/image_encoder\", \"huggingface/image_encoder;revision=main\",\n\"image_encoder_folder_on_disk\".\n\nBlob links / single file loads are not supported for Image Encoders.\n\nThe \"revision\" argument specifies the model revision to use for the Image Encoder when loading from\nHugging Face repository or blob link, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the Image Encoder model variant. If \"variant\" is specified when\nloading from a Hugging Face repository or folder, weights will be loaded from \"variant\" filename,\ne.g. \"pytorch_model.<variant>.safetensors.\n\nSimilar to --vae, \"variant\" does not default to the value of --variant in order to prevent errors\nwith common use cases. If you specify multiple IP Adapters, they must all have the same \"variant\"\nvalue or you will receive a usage error.\n\nThe \"subfolder\" argument specifies the Image Encoder model subfolder, if specified when loading from\na Hugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the Image Encoder model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load weights directly from a path on disk, you must point this argument at the folder\nthey exist in, which should also contain the config.json file for the Image Encoder. For example, a\ndownloaded repository folder from Hugging Face.", "--ip-adapters": "Specify one or more IP Adapter models using URIs. These should be a Hugging Face repository slug,\npath to model file on disk (for example, a .pt, .pth, .bin, .ckpt, or .safetensors file), or model\nfolder containing model files.\n\nIf an IP Adapter model file exists at a URL which serves the file as a raw download, you may provide\nan http/https link to it and it will be downloaded to dgenerates web cache.\n\nHugging Face blob links are not supported, see \"subfolder\" and \"weight-name\" below instead.\n\nOptional arguments can be provided after an IP Adapter model specification, these are: \"scale\",\n\"revision\", \"subfolder\", and \"weight-name\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/ip-adapter;scale=1.0;revision=main;subfolder=repo_subfolder;weight-name=ip_adapter.safetensors\".\n\nThe \"scale\" argument indicates the scale factor of the IP Adapter.\n\nThe \"revision\" argument specifies the model revision to use for the IP Adapter when loading from\nHugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"subfolder\" argument specifies the IP Adapter model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"weight-name\" argument indicates the name of the weights file to be loaded when loading from a\nHugging Face repository or folder on disk.\n\nIf you wish to load a weights file directly from disk, the simplest way is: --ip-adapters\n\"ip_adapter.safetensors\", or with a scale \"ip_adapter.safetensors;scale=1.0\", all other loading\narguments are unused in this case and may produce an error message if used.", "--textual-inversions": "Specify one or more Textual Inversion models using URIs. These should be a Hugging Face repository\nslug, path to model file on disk (for example, a .pt, .pth, .bin, .ckpt, or .safetensors file), or\nmodel folder containing model files.\n\nIf a Textual Inversion model file exists at a URL which serves the file as a raw download, you may\nprovide an http/https link to it and it will be downloaded to dgenerates web cache.\n\nHugging Face blob links are not supported, see \"subfolder\" and \"weight-name\" below instead.\n\nOptional arguments can be provided after the Textual Inversion model specification, these are:\n\"token\", \"revision\", \"subfolder\", and \"weight-name\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/ti_model;revision=main;subfolder=repo_subfolder;weight-name=ti_model.safetensors\".\n\nThe \"token\" argument can be used to override the prompt token used for the textual inversion prompt\nembedding. For normal Stable Diffusion the default token value is provided by the model itself, but\nfor Stable Diffusion XL and Flux the default token value is equal to the model file name with no\nextension and all spaces replaced by underscores.\n\nThe \"revision\" argument specifies the model revision to use for the Textual Inversion model when\nloading from Hugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"subfolder\" argument specifies the Textual Inversion model subfolder, if specified when loading\nfrom a Hugging Face repository or folder, weights from the specified subfolder.\n\nThe \"weight-name\" argument indicates the name of the weights file to be loaded when loading from a\nHugging Face repository or folder on disk.\n\nIf you wish to load a weights file directly from disk, the simplest way is:  --textual-inversions\n\"my_ti_model.safetensors\", all other loading arguments are unused in this case and may produce an\nerror message if used.", "--control-nets": "Specify one or more ControlNet models using URIs. This should be a Hugging Face repository slug /\nblob link, path to model file on disk (for example, a .pt, .pth, .bin, .ckpt, or .safetensors file),\nor model folder containing model files.\n\nIf a ControlNet model file exists at a URL which serves the file as a raw download, you may provide\nan http/https link to it and it will be downloaded to dgenerates web cache.\n\nOptional arguments can be provided after the ControlNet model specification, these are: \"scale\",\n\"start\", \"end\", \"revision\", \"variant\", \"subfolder\", and \"dtype\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/controlnet;scale=1.0;start=0.0;end=1.0;revision=main;variant=fp16;subfolder=repo_subfolder;dtype=float16\".\n\nThe \"scale\" argument specifies the scaling factor applied to the ControlNet model, the default value\nis 1.0.\n\nThe \"start\" argument specifies at what fraction of the total inference steps to begin applying the\nControlNet, defaults to 0.0, IE: the very beginning.\n\nThe \"end\"  argument specifies at what fraction of the total inference steps to stop applying the\nControlNet, defaults to 1.0, IE: the very end.\n\nThe \"mode\" argument can be used when using --model-type torch-flux and ControlNet Union to specify\nthe ControlNet mode.  Acceptable values are: \"canny\", \"tile\", \"depth\", \"blur\", \"pose\", \"gray\", \"lq\".\nThis value may also be an integer between 0 and 6, inclusive.\n\nThe \"revision\" argument specifies the model revision to use for the ControlNet model when loading\nfrom Hugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the ControlNet model variant, if \"variant\" is specified when\nloading from a Hugging Face repository or folder, weights will be loaded from \"variant\"  filename,\ne.g. \"pytorch_model.<variant>.safetensors. \"variant\" defaults to automatic selection. \"variant\" in\nthe case of --control-nets does not default to the value of --variant to prevent failures during\ncommon use cases.\n\nThe \"subfolder\" argument specifies the ControlNet model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the ControlNet model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load a weights file directly from disk, the simplest way is:  --control-nets\n\"my_controlnet.safetensors\" or --control-nets \"my_controlnet.safetensors;scale=1.0;dtype=float16\",\nall other loading arguments aside from \"scale\", \"start\", \"end\", and \"dtype\" are unused in this case\nand may produce an error message if used.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --control-nets\n\"https://huggingface.co/UserName/repository-name/blob/main/controlnet.safetensors\", the \"revision\"\nargument may be used with this syntax.", "--t2i-adapters": "Specify one or more T2IAdapter models using URIs. This should be a Hugging Face repository slug /\nblob link, path to model file on disk (for example, a .pt, .pth, .bin, .ckpt, or .safetensors file),\nor model folder containing model files.\n\nIf a T2IAdapter model file exists at a URL which serves the file as a raw download, you may provide\nan http/https link to it and it will be downloaded to dgenerates web cache.\n\nOptional arguments can be provided after the T2IAdapter model specification, these are: \"scale\",\n\"revision\", \"variant\", \"subfolder\", and \"dtype\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/t2iadapter;scale=1.0;revision=main;variant=fp16;subfolder=repo_subfolder;dtype=float16\".\n\nThe \"scale\" argument specifies the scaling factor applied to the T2IAdapter model, the default value\nis 1.0.\n\nThe \"revision\" argument specifies the model revision to use for the T2IAdapter model when loading\nfrom Hugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the T2IAdapter model variant, if \"variant\" is specified when\nloading from a Hugging Face repository or folder, weights will be loaded from \"variant\" filename,\ne.g. \"pytorch_model.<variant>.safetensors. \"variant\"  defaults to automatic selection. \"variant\" in\nthe case of --t2i-adapters does not default to the value of --variant to prevent failures during\ncommon use cases.\n\nThe \"subfolder\" argument specifies the ControlNet model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the T2IAdapter model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load a weights file directly from disk, the simplest way is:  --t2i-adapters\n\"my_t2i_adapter.safetensors\" or --t2i-adapters \"my_t2i_adapter.safetensors;scale=1.0;dtype=float16\",\nall other loading arguments aside from \"scale\" and \"dtype\" are unused in this case and may produce\nan error message if used.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --t2i-adapters\n\"https://huggingface.co/UserName/repository-name/blob/main/t2i_adapter.safetensors\", the \"revision\"\nargument may be used with this syntax.", "--quantizer": "Global quantization configuration via URI.\n\nThis URI specifies the quantization backend and its configuration.\n\nQuantization will be applied to all text encoders, and unet / transformer  models with the provided\nsettings when using this argument.\n\nIf you wish to specify different quantization types per encoder or unet / transformer, you should\nuse the \"quantizer\" URI argument of --text-encoders and or --unet / --transformer to specify the\nquantization settings on a per model basis.\n\nAvailable backends are: (bnb / bitsandbytes), torchao\n\nbitsandbytes can be specified with \"bnb\" or \"bitsandbytes\"\n\nExample:\n\n--quantizer bnb;bits=4;bits4_compute_dtype=float16\n\nor:\n\n--quantizer bnb;bits=4;bits4_compute_dtype=float16\n\nThe bitsandbytes backend URI possesses these arguments and defaults:\n\n* bits: int = 8 (must be 4 or 8)\n\n* bits4_compute_dtype: str = None\n\n* bits4_quant_type: str = \"fp4\"\n\n* bits4_use_double_quant = False,\n\n* bits4_quant_storage: str = None\n\ntorchao may be specified using this syntax:\n\n--quantizer torchao;type=int8wo\n\nThe only configuration argument used with the torchao backend is \"type\", which  is a string\nindicating the quantization datatype for loading.", "--quantizer2": "Global quantization configuration via URI for the secondary model,  such as the SDXL Refiner or\nStable Cascade decoder. See --quantizer for syntax examples.", "--scheduler": "Specify a scheduler (sampler) by URI. Passing \"help\" to this argument will print the compatible\nschedulers for a model without generating any images. Passing \"helpargs\"  will yield a help message\nwith a list of overridable arguments for each scheduler and their typical defaults. Arguments listed\nby \"helpargs\" can be overridden using the URI syntax typical to other dgenerate URI arguments.\n\nYou may pass multiple scheduler URIs to this argument, each URI will be tried in turn.", "--hi-diffusion": "Activate HiDiffusion for the primary model?", "--sdxl-refiner-hi-diffusion": "Activate HiDiffusion for the SDXL refiner?", "--pag": "Use perturbed attention guidance? This is supported for --model-type torch, torch-sdxl, and\ntorch-sd3 for most use cases. This enables PAG for the main model using default scale values.", "--pag-scales": "One or more perturbed attention guidance scales to try. Specifying values enables PAG for the main\nmodel. (default: [3.0])", "--pag-adaptive-scales": "One or more adaptive perturbed attention guidance scales to try. Specifying values enables PAG for\nthe main model. (default: [0.0])", "--sdxl-refiner-pag": "Use perturbed attention guidance in the SDXL refiner?  This is supported for --model-type torch-sdxl\nfor most use cases. This enables PAG for the SDXL refiner model using default scale values.", "--sdxl-refiner-pag-scales": "One or more perturbed attention guidance scales to try with the SDXL refiner pass. Specifying values\nenables PAG for the refiner. (default: [3.0])", "--sdxl-refiner-pag-adaptive-scales": "One or more adaptive perturbed attention guidance scales to try with the SDXL refiner pass.\nSpecifying values enables PAG for the refiner. (default: [0.0])", "--model-sequential-offload": "Force sequential model offloading for the main pipeline, this may drastically reduce memory\nconsumption and allow large models to run when they would otherwise not fit in your GPUs VRAM.\nInference will be much slower. Mutually exclusive with --model-cpu-offload", "--model-cpu-offload": "Force model cpu offloading for the main pipeline, this may reduce memory consumption and allow large\nmodels to run when they would otherwise not fit in your GPUs VRAM. Inference will be slower.\nMutually exclusive with --model-sequential-offload", "--s-cascade-decoder": "Specify a Stable Cascade (torch-s-cascade) decoder model path using a URI. This should be a Hugging\nFace repository slug / blob link, path to model file on disk (for example, a .pt, .pth, .bin, .ckpt,\nor .safetensors file), or model folder containing model files.\n\nOptional arguments can be provided after the decoder model specification, these are: \"revision\",\n\"variant\", \"subfolder\", and \"dtype\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/decoder_model;revision=main;variant=fp16;subfolder=repo_subfolder;dtype=float16\".\n\nThe \"revision\" argument specifies the model revision to use for the decoder model when loading from\nHugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the decoder model variant and defaults to the value of --variant.\nWhen \"variant\" is specified when loading from a Hugging Face repository or folder, weights will be\nloaded from \"variant\" filename, e.g. \"pytorch_model.<variant>.safetensors.\n\nThe \"subfolder\" argument specifies the decoder model subfolder, if specified when loading from a\nHugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the Stable Cascade decoder model precision, it defaults to the value\nof -t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load a weights file directly from disk, the simplest way is:  --sdxl-refiner\n\"my_decoder.safetensors\" or --sdxl-refiner \"my_decoder.safetensors;dtype=float16\", all other loading\narguments aside from \"dtype\" are unused in this case and may produce an error message if used.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --s-cascade-decoder\n\"https://huggingface.co/UserName/repository-name/blob/main/decoder.safetensors\", the \"revision\"\nargument may be used with this syntax.", "--s-cascade-decoder-sequential-offload": "Force sequential model offloading for the Stable Cascade decoder pipeline, this may drastically\nreduce memory consumption and allow large models to run when they would otherwise not fit in your\nGPUs VRAM. Inference will be much slower. Mutually exclusive with --s-cascade-decoder-cpu-offload", "--s-cascade-decoder-cpu-offload": "Force model cpu offloading for the Stable Cascade decoder pipeline, this may reduce memory\nconsumption and allow large models to run when they would otherwise not fit in your GPUs VRAM.\nInference will be slower. Mutually exclusive with --s-cascade-decoder-sequential-offload", "--s-cascade-decoder-prompts": "One or more prompts to try with the Stable Cascade decoder model, by default the decoder model gets\nthe primary prompt, this argument overrides that with a prompt of your choosing. The negative prompt\ncomponent can be specified with the same syntax as --prompts", "--s-cascade-decoder-inference-steps": "One or more inference steps values to try with the Stable Cascade decoder. (default: [10])", "--s-cascade-decoder-guidance-scales": "One or more guidance scale values to try with the Stable Cascade decoder. (default: [0])", "--s-cascade-decoder-schedulers": "Specify a scheduler (sampler) by URI for the Stable Cascade decoder pass. Operates the exact same\nway as --scheduler including the \"help\" option. Passing 'helpargs'  will yield a help message with a\nlist of overridable arguments for each scheduler and their typical defaults. Defaults to the value\nof --scheduler.\n\nYou may pass multiple scheduler URIs to this argument, each URI will be tried in turn.", "--sdxl-refiner": "Specify a Stable Diffusion XL (torch-sdxl) refiner model path using a URI. This should be a Hugging\nFace repository slug / blob link, path to model file on disk (for example, a .pt, .pth, .bin, .ckpt,\nor .safetensors file), or model folder containing model files.\n\nOptional arguments can be provided after the SDXL refiner model specification, these are:\n\"revision\", \"variant\", \"subfolder\", and \"dtype\".\n\nThey can be specified as so in any order, they are not positional:\n\"huggingface/refiner_model_xl;revision=main;variant=fp16;subfolder=repo_subfolder;dtype=float16\".\n\nThe \"revision\" argument specifies the model revision to use for the refiner model when loading from\nHugging Face repository, (The Git branch / tag, default is \"main\").\n\nThe \"variant\" argument specifies the SDXL refiner model variant and defaults to the value of\n--variant. When \"variant\" is specified when loading from a Hugging Face repository or folder,\nweights will be loaded from \"variant\" filename, e.g. \"pytorch_model.<variant>.safetensors.\n\nThe \"subfolder\" argument specifies the SDXL refiner model subfolder, if specified when loading from\na Hugging Face repository or folder, weights from the specified subfolder.\n\nThe \"dtype\" argument specifies the SDXL refiner model precision, it defaults to the value of\n-t/--dtype and should be one of: auto, bfloat16, float16, or float32.\n\nIf you wish to load a weights file directly from disk, the simplest way is:  --sdxl-refiner\n\"my_sdxl_refiner.safetensors\" or --sdxl-refiner \"my_sdxl_refiner.safetensors;dtype=float16\", all\nother loading arguments aside from \"dtype\" are unused in this case and may produce an error message\nif used.\n\nIf you wish to load a specific weight file from a Hugging Face repository, use the blob link loading\nsyntax: --sdxl-refiner\n\"https://huggingface.co/UserName/repository-name/blob/main/refiner_model.safetensors\", the\n\"revision\" argument may be used with this syntax.", "--sdxl-refiner-cpu-offload": "Force model cpu offloading for the SDXL refiner pipeline, this may reduce memory consumption and\nallow large models to run when they would otherwise not fit in your GPUs VRAM. Inference will be\nslower. Mutually exclusive with --refiner-sequential-offload", "--sdxl-refiner-schedulers": "Specify a scheduler (sampler) by URI for the SDXL refiner pass. Operates the exact same way as\n--scheduler including the \"help\" option. Passing 'helpargs' will yield a help message with a list of\noverridable arguments for each scheduler and their typical defaults. Defaults to the value of\n--scheduler.\n\nYou may pass multiple scheduler URIs to this argument, each URI will be tried in turn.", "--sdxl-refiner-edit": "Force the SDXL refiner to operate in edit mode instead of cooperative denoising mode as it would\nnormally do for inpainting and ControlNet usage. The main model will perform the full amount of\ninference steps requested by --inference-steps. The output of the main model will be passed to the\nrefiner model and processed with an image seed strength in img2img mode determined by (1.0 -\nhigh-noise-fraction)", "--sdxl-second-prompts": "One or more secondary prompts to try using SDXL's secondary text encoder. By default the model is\npassed the primary prompt for this value, this option allows you to choose a different prompt. The\nnegative prompt component can be specified with the same syntax as --prompts", "--sdxl-t2i-adapter-factors": "One or more SDXL specific T2I adapter factors to try, this controls the amount of time-steps for\nwhich a T2I adapter applies guidance to an image, this is a value between 0.0 and 1.0. A value of\n0.5 for example indicates that the T2I adapter is only active for half the amount of time-steps it\ntakes to completely render an image.", "--sdxl-aesthetic-scores": "One or more Stable Diffusion XL (torch-sdxl) \"aesthetic-score\" micro-conditioning parameters. Used\nto simulate an aesthetic score of the generated image by influencing the positive text condition.\nPart of SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952].", "--sdxl-crops-coords-top-left": "One or more Stable Diffusion XL (torch-sdxl) \"negative-crops-coords-top-left\" micro-conditioning\nparameters in the format \"0,0\". --sdxl-crops-coords-top-left can be used to generate an image that\nappears to be \"cropped\" from the position --sdxl-crops-coords-top-left downwards. Favorable,\nwell-centered images are usually achieved by setting --sdxl-crops-coords-top-left to \"0,0\". Part of\nSDXL's micro-conditioning as explained in section 2.2 of [https://huggingface.co/papers/2307.01952].", "--sdxl-original-sizes": "One or more Stable Diffusion XL (torch-sdxl) \"original-size\" micro-conditioning parameters in the\nformat (WIDTH)x(HEIGHT). If not the same as --sdxl-target-size the image will appear to be down or\nup-sampled. --sdxl-original-size defaults to --output-size or the size of any input images if not\nspecified. Part of SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952]", "--sdxl-target-sizes": "One or more Stable Diffusion XL (torch-sdxl) \"target-size\" micro-conditioning parameters in the\nformat (WIDTH)x(HEIGHT). For most cases, --sdxl-target-size should be set to the desired height and\nwidth of the generated image. If not specified it will default to --output-size or the size of any\ninput images. Part of SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952]", "--sdxl-negative-aesthetic-scores": "One or more Stable Diffusion XL (torch-sdxl) \"negative-aesthetic-score\" micro-conditioning\nparameters. Part of SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952]. Can be used to simulate an aesthetic score of the\ngenerated image by influencing the negative text condition.", "--sdxl-negative-original-sizes": "One or more Stable Diffusion XL (torch-sdxl) \"negative-original-sizes\" micro-conditioning\nparameters. Negatively condition the generation process based on a specific image resolution. Part\nof SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952]. For more information, refer to this issue thread:\nhttps://github.com/huggingface/diffusers/issues/4208", "--sdxl-negative-target-sizes": "One or more Stable Diffusion XL (torch-sdxl) \"negative-original-sizes\" micro-conditioning\nparameters. To negatively condition the generation process based on a target image resolution. It\nshould be as same as the \"--sdxl-target-size\" for most cases. Part of SDXL's micro-conditioning as\nexplained in section 2.2 of [https://huggingface.co/papers/2307.01952]. For more information, refer\nto this issue thread: https://github.com/huggingface/diffusers/issues/4208.", "--sdxl-negative-crops-coords-top-left": "One or more Stable Diffusion XL (torch-sdxl) \"negative-crops-coords-top-left\" micro-conditioning\nparameters in the format \"0,0\". Negatively condition the generation process based on a specific crop\ncoordinates. Part of SDXL's micro-conditioning as explained in section 2.2 of\n[https://huggingface.co/papers/2307.01952]. For more information, refer to this issue thread:\nhttps://github.com/huggingface/diffusers/issues/4208.", "--sdxl-refiner-prompts": "One or more prompts to try with the SDXL refiner model, by default the refiner model gets the\nprimary prompt, this argument overrides that with a prompt of your choosing. The negative prompt\ncomponent can be specified with the same syntax as --prompts", "--sdxl-refiner-clip-skips": "One or more clip skip override values to try for the SDXL refiner, which normally uses the clip skip\nvalue for the main model when it is defined by --clip-skips.", "--sdxl-refiner-second-prompts": "One or more prompts to try with the SDXL refiner models secondary text encoder, by default the\nrefiner model gets the primary prompt passed to its second text encoder, this argument overrides\nthat with a prompt of your choosing. The negative prompt component can be specified with the same\nsyntax as --prompts", "--sdxl-refiner-aesthetic-scores": "See: --sdxl-aesthetic-scores, applied to SDXL refiner pass.", "--sdxl-refiner-crops-coords-top-left": "See: --sdxl-crops-coords-top-left, applied to SDXL refiner pass.", "--sdxl-refiner-original-sizes": "See: --sdxl-refiner-original-sizes, applied to SDXL refiner pass.", "--sdxl-refiner-target-sizes": "See: --sdxl-refiner-target-sizes, applied to SDXL refiner pass.", "--sdxl-refiner-negative-aesthetic-scores": "See: --sdxl-negative-aesthetic-scores, applied to SDXL refiner pass.", "--sdxl-refiner-negative-original-sizes": "See: --sdxl-negative-original-sizes, applied to SDXL refiner pass.", "--sdxl-refiner-negative-target-sizes": "See: --sdxl-negative-target-sizes, applied to SDXL refiner pass.", "--sdxl-refiner-negative-crops-coords-top-left": "See: --sdxl-negative-crops-coords-top-left, applied to SDXL refiner pass.", "--sdxl-high-noise-fractions": "One or more high-noise-fraction values for Stable Diffusion XL (torch-sdxl), this fraction of\ninference steps will be processed by the base model, while the rest will be processed by the refiner\nmodel. Multiple values to this argument will result in additional generation steps for each value.\nIn certain situations when collaborative denoising is not supported, such as when using\n--control-nets and inpainting with SDXL, the inverse proportion of this value IE: (1.0 -\nhigh-noise-fraction) becomes the --image-seed-strengths input to the SDXL refiner in plain img2img\nmode. Edit mode may be forced with the  option --sdxl-refiner-edit (default: [0.8])", "--sdxl-refiner-inference-steps": "One or more inference steps values for the SDXL refiner when in use. Override the number of\ninference steps used by the SDXL refiner, which defaults to the value taken from --inference-steps.", "--sdxl-refiner-guidance-scales": "One or more guidance scale values for the SDXL refiner when in use. Override the guidance scale\nvalue used by the SDXL refiner, which defaults to the value taken from --guidance-scales.", "--sdxl-refiner-guidance-rescales": "One or more guidance rescale values for the SDXL refiner when in use. Override the guidance rescale\nvalue used by the SDXL refiner, which defaults to the value taken from --guidance-rescales.", "--safety-checker": "Enable safety checker loading, this is off by default. When turned on images with NSFW content\ndetected may result in solid black output. Some pretrained models have no safety checker model\npresent, in that case this option has no effect.", "--device": "cuda / cpu, or other device supported by torch, for example mps on MacOS. (default: cuda, mps on\nMacOS). Use: cuda:0, cuda:1, cuda:2, etc. to specify a specific cuda supporting GPU.", "--dtype": "Model precision: auto, bfloat16, float16, or float32. (default: auto)", "--output-size": "Image output size, for txt2img generation this is the exact output size. The dimensions specified\nfor this value must be aligned by 8 or you will receive an error message. If an --image-seeds URI is\nused its Seed, Mask, and/or Control component image sources will be resized to this dimension with\naspect ratio maintained before being used for generation by default, except in the case of Stable\nCascade where the images are used as a style prompt (not a noised seed), and can be of varying\ndimensions.\n\nIf --no-aspect is not specified, width will be fixed and a new height (aligned by 8) will be\ncalculated for the input images. In most cases resizing the image inputs will result in an image\noutput of an equal size to the inputs, except for upscalers and Deep Floyd --model-type values\n(torch-if*).\n\nIf only one integer value is provided, that is the value for both dimensions. X/Y dimension values\nshould be separated by \"x\".\n\nThis value defaults to 512x512 for Stable Diffusion when no --image-seeds are specified (IE txt2img\nmode), 1024x1024 for Stable Cascade and Stable Diffusion 3/XL or Flux model types, and 64x64 for\n--model-type torch-if (Deep Floyd stage 1).\n\nDeep Floyd stage 1 images passed to superscaler models (--model-type torch-ifs*)  that are specified\nwith the 'floyd' keyword argument in an --image-seeds definition are never resized or processed in\nany way.", "--no-aspect": "This option disables aspect correct resizing of images provided to --image-seeds globally. Seed,\nMask, and Control guidance images will be resized to the closest dimension specified by\n--output-size that is aligned by 8 pixels with no consideration of the source aspect ratio. This can\nbe overriden at the --image-seeds level with the image seed keyword argument 'aspect=true/false'.", "--output-path": "Output path for generated images and files. This directory will be created if it does not exist.\n(default: ./output)", "--output-prefix": "Name prefix for generated images and files. This prefix will be added to the beginning of every\ngenerated file, followed by an underscore.", "--output-overwrite": "Enable overwrites of files in the output directory that already exists. The default behavior is not\nto do this, and instead append a filename suffix: \"_duplicate_(number)\" when it is detected that the\ngenerated file name already exists.", "--output-configs": "Write a configuration text file for every output image or animation. The text file can be used\nreproduce that particular output image or animation by piping it to dgenerate STDIN or by using the\n--file option, for example \"dgenerate < config.dgen\"  or \"dgenerate --file config.dgen\".  These\nfiles will be written to --output-path and are affected by --output-prefix and --output-overwrite as\nwell. The files will be named after their corresponding image or animation file. Configuration files\nproduced for animation frame images will utilize --frame-start and --frame-end to specify the frame\nnumber.", "--output-metadata": "Write the information produced by --output-configs to the PNG metadata of each image. Metadata will\nnot be written to animated files (yet). The data is written to a PNG metadata property named\nDgenerateConfig and can be read using ImageMagick like so:  \"magick identify -format\n\"%%[Property:DgenerateConfig] generated_file.png\".", "--prompt-weighter": "Specify a prompt weighter implementation by URI, for example: --prompt-weighter compel, or\n--prompt-weighter sd-embed. By default, no prompt weighting syntax is enabled, meaning that you\ncannot adjust token weights as you may be able to do in software such as ComfyUI, Automatic1111,\nCivitAI etc. And in some cases the length of your prompt is limited. Prompt weighters support these\nspecial token weighting syntaxes and long prompts, currently there are two implementations \"compel\"\nand \"sd-embed\". See: --prompt-weighter-help for a list of implementation names. You may also use\n--prompt-weighter-help \"name\" to see comprehensive documentation for a specific prompt weighter\nimplementation.", "--prompt-weighter-help": "Use this option alone (or with --plugin-modules) and no model specification in order to list\navailable prompt weighter names. Specifying one or more prompt weighter names after this option will\ncause usage documentation for the specified prompt weighters to be printed. When used with\n--plugin-modules, prompt weighters implemented by the specified plugins will also be listed.", "--prompts": "One or more prompts to try, an image group is generated for each prompt, prompt data is split by ;\n(semi-colon). The first value is the positive text influence, things you want to see. The Second\nvalue is negative influence IE. things you don't want to see. Example: --prompts \"photo of a horse\nin a field; artwork, painting, rain\". (default: [(empty string)])", "--sd3-max-sequence-length": "The maximum amount of prompt tokens that the T5EncoderModel (third text encoder) of Stable Diffusion\n3 can handle. This should be an integer value between 1 and 512 inclusive. The higher the value the\nmore resources and time are required for processing. (default: 256)", "--sd3-second-prompts": "One or more secondary prompts to try using the torch-sd3 (Stable Diffusion 3)  secondary text\nencoder. By default the model is passed the primary prompt for this value, this option allows you to\nchoose a different prompt. The negative prompt component can be specified with the same syntax as\n--prompts", "--sd3-third-prompts": "One or more tertiary prompts to try using the torch-sd3 (Stable Diffusion 3)  tertiary (T5) text\nencoder. By default the model is passed the primary prompt for this value, this option allows you to\nchoose a different prompt. The negative prompt component can be specified with the same syntax as\n--prompts", "--flux-second-prompts": "One or more secondary prompts to try using the torch-flux (Flux)  secondary (T5) text encoder. By\ndefault the model is passed the primary prompt for this value, this option allows you to choose a\ndifferent prompt.", "--flux-max-sequence-length": "The maximum amount of prompt tokens that the T5EncoderModel (second text encoder) of Flux can\nhandle. This should be an integer value between 1 and 512 inclusive. The higher the value the more\nresources and time are required for processing. (default: 512)", "--clip-skips": "One or more clip skip values to try. Clip skip is the number of layers to be skipped from CLIP while\ncomputing the prompt embeddings, it must be a value greater than or equal to zero. A value of 1\nmeans that the output of the pre-final layer will be used for computing the prompt embeddings. This\nis only supported for --model-type values \"torch\", \"torch-sdxl\", and \"torch-sd3\".", "--seeds": "One or more seeds to try, define fixed seeds to achieve deterministic output. This argument may not\nbe used when --gse/--gen-seeds is used. (default: [randint(0, 99999999999999)])", "--seeds-to-images": "When this option is enabled, each provided --seeds value or value generated by --gen-seeds is used\nfor the corresponding image input given by --image-seeds. If the amount of --seeds given is not\nidentical to that of the amount of --image-seeds given, the seed is determined as: seed =\nseeds[image_seed_index %% len(seeds)], IE: it wraps around.", "--gen-seeds": "Auto generate N random seeds to try. This argument may not be used when -se/--seeds is used.", "--animation-format": "Output format when generating an animation from an input video / gif / webp etc. Value must be one\nof: mp4, png, apng, gif, or webp. You may also specify \"frames\" to indicate that only frames should\nbe output and no coalesced animation file should be rendered. (default: mp4)", "--image-format": "Output format when writing static images. Any selection other than \"png\" is not compatible with\n--output-metadata. Value must be one of: png, apng, blp, bmp, dib, bufr, pcx, dds, ps, eps, gif,\ngrib, h5, hdf, jp2, j2k, jpc, jpf, jpx, j2c, icns, ico, im, jfif, jpe, jpg, jpeg, tif, tiff, mpo,\nmsp, palm, pdf, pbm, pgm, ppm, pnm, pfm, bw, rgb, rgba, sgi, tga, icb, vda, vst, webp, wmf, emf, or\nxbm. (default: png)", "--no-frames": "Do not write frame images individually when rendering an animation, only write the animation file.\nThis option is incompatible with --animation-format frames.", "--frame-start": "Starting frame slice point for animated files (zero-indexed), the specified frame will be included.\n(default: 0)", "--frame-end": "Ending frame slice point for animated files (zero-indexed), the specified frame will be included.", "--image-seeds": "One or more image seed URIs to process, these may consist of URLs or file paths. Videos / GIFs /\nWEBP files will result in frames being rendered as well as an animated output file being generated\nif more than one frame is available in the input file. Inpainting for static images can be achieved\nby specifying a black and white mask image in each image seed string using a semicolon as the\nseparating character, like so:  \"my-seed-image.png;my-image-mask.png\", white areas of the mask\nindicate where generated content is to be placed in your seed image.\n\nOutput dimensions specific to the image seed can be specified by placing the dimension at the end of\nthe string following a semicolon like so: \"my-seed-image.png;512x512\" or\n\"my-seed-image.png;my-image-mask.png;512x512\". When using --control-nets, a singular image\nspecification is interpreted as the control guidance image, and you can specify multiple control\nimage sources by separating them with commas in the case where multiple ControlNets are specified,\nIE: (--image-seeds \"control-image1.png, control-image2.png\") OR (--image-seeds\n\"seed.png;control=control-image1.png, control-image2.png\").   Using --control-nets with img2img or\ninpainting can be accomplished with the syntax:\n\"my-seed-image.png;mask=my-image-mask.png;control=my-control-image.png;resize=512x512\". The \"mask\"\nand \"resize\" arguments are optional when using --control-nets. Videos, GIFs, and WEBP are also\nsupported as inputs when using --control-nets, even for the \"control\" argument.\n\n--image-seeds is capable of reading from multiple animated files at once or any combination of\nanimated files and images, the animated file with the least amount of frames dictates how many\nframes are generated and static images are duplicated over the total amount of frames. The keyword\nargument \"aspect\" can be used to determine resizing behavior when the global argument --output-size\nor the local keyword argument \"resize\" is specified, it is a boolean argument indicating whether\naspect ratio of the input image should be respected or ignored.\n\nThe keyword argument \"floyd\" can be used to specify images from a previous deep floyd stage when\nusing --model-type torch-ifs*. When keyword arguments are present, all applicable images such as\n\"mask\", \"control\", etc. must also be defined with keyword arguments instead of with the short\nsyntax.", "--seed-image-processors": "Specify one or more image processor actions to perform on the primary image(s) specified by\n--image-seeds.\n\nFor example: --seed-image-processors \"flip\" \"mirror\" \"grayscale\".\n\nTo obtain more information about what image processors are available and how to use them, see:\n--image-processor-help.\n\nIf you have multiple images specified for batching, for example (--image-seeds \"images:\nimg2img-1.png, img2img-2.png\"), you may use the delimiter \"+\" to separate image processor chains, so\nthat a certain chain affects a certain seed image, the plus symbol may also be used to represent a\nnull processor.\n\nFor example: (--seed-image-processors affect-img-1 + affect-img-2), or (--seed-image-processors +\naffect-img-2), or (--seed-image-processors affect-img-1 +).\n\nThe amount of processors / processor chains must not exceed the amount of input images, or you will\nreceive a syntax error message. To obtain more information about what image processors  are\navailable and how to use them, see: --image-processor-help.", "--mask-image-processors": "Specify one or more image processor actions to perform on the inpaint mask image(s) specified by\n--image-seeds.\n\nFor example: --mask-image-processors \"invert\".\n\nTo obtain more information about what image processors are available and how to use them, see:\n--image-processor-help.\n\nIf you have multiple masks specified for batching, for example --image-seeds (\"images:\nimg2img-1.png, img2img-2.png; mask-1.png, mask-2.png\"), you may use the delimiter \"+\" to separate\nimage processor chains, so that a certain chain affects a certain mask image, the plus symbol may\nalso be used to represent a null processor.\n\nFor example:  (--mask-image-processors affect-mask-1 + affect-mask-2), or (--mask-image-processors +\naffect-mask-2), or (--mask-image-processors affect-mask-1 +).\n\nThe amount of processors / processor chains must not exceed the amount of input mask images, or you\nwill receive a syntax error message. To obtain more information about what image processors are\navailable and how to use them, see: --image-processor-help.", "--control-image-processors": "Specify one or more image processor actions to perform on the control image specified by\n--image-seeds, this option is meant to be used with --control-nets.\n\nExample: --control-image-processors \"canny;lower=50;upper=100\".\n\nThe delimiter \"+\" can be used to specify a different processor group for each image when using\nmultiple control images with --control-nets.\n\nFor example if you have --image-seeds \"img1.png, img2.png\" or --image-seeds \"...;control=img1.png,\nimg2.png\"  specified and multiple ControlNet models specified with --control-nets, you can specify\nprocessors for those control images with the syntax: (--control-image-processors \"processes-img1\" +\n\"processes-img2\").\n\nThis syntax also supports chaining of processors, for example:  (--control-image-processors\n\"first-process-img1\" \"second-process-img1\" + \"process-img2\").   The amount of specified processors\nmust not exceed the amount of specified control images, or you will receive a syntax error message.\n\nImages which do not have a processor defined for them will not be processed, and the plus character\ncan be used to indicate an image is not to be processed and instead skipped over when that image is\na leading element, for example (--control-image-processors + \"process-second\") would indicate that\nthe first control guidance image is not to be processed, only the second.\n\nTo obtain more information about what image processors are available and how to use them, see:\n--image-processor-help.", "--image-processor-help": "Use this option alone (or with --plugin-modules) and no model specification in order to list\navailable image processor names. Specifying one or more image processor names after this option will\ncause usage documentation for the specified image processors to be printed. When used with\n--plugin-modules, image processors implemented by the specified plugins will also be listed.", "--post-processors": "Specify one or more image processor actions to perform on generated output before it is saved. For\nexample: --post-processors \"upcaler;model=4x_ESRGAN.pth\". To obtain more information about what\nprocessors are available and how to use them, see: --image-processor-help.", "--image-seed-strengths": "One or more image strength values to try when using --image-seeds for img2img or inpaint mode.\nCloser to 0 means high usage of the seed image (less noise convolution), 1 effectively means no\nusage (high noise convolution). Low values will produce something closer or more relevant to the\ninput image, high values will give the AI more creative freedom. This value must be greater than 0\nand less than or equal to 1. (default: [0.8])", "--upscaler-noise-levels": "One or more upscaler noise level values to try when using the super resolution upscaler --model-type\ntorch-upscaler-x4 or torch-ifs. Specifying this option for --model-type torch-upscaler-x2 will\nproduce an error message. The higher this value the more noise is added to the image before\nupscaling (similar to --image-seed-strengths). (default: [20 for x4, 250 for\ntorch-ifs/torch-ifs-img2img, 0 for torch-ifs inpainting mode])", "--guidance-scales": "One or more guidance scale values to try. Guidance scale effects how much your text prompt is\nconsidered. Low values draw more data from images unrelated to text prompt. (default: [5])", "--image-guidance-scales": "One or more image guidance scale values to try. This can push the generated image towards the\ninitial image when using --model-type *-pix2pix models, it is unsupported for other model types. Use\nin conjunction with --image-seeds, inpainting (masks) and --control-nets are not supported. Image\nguidance scale is enabled by setting image-guidance-scale > 1. Higher image guidance scale\nencourages generated images that are closely linked to the source image, usually at the expense of\nlower image quality. Requires a value of at least 1. (default: [1.5])", "--guidance-rescales": "One or more guidance rescale factors to try. Proposed by [Common Diffusion Noise Schedules and\nSample Steps are Flawed](https://arxiv.org/pdf/2305.08891.pdf) \"guidance_scale\" is defined as \"\u03c6\" in\nequation 16. of [Common Diffusion Noise Schedules and Sample Steps are Flawed]\n(https://arxiv.org/pdf/2305.08891.pdf). Guidance rescale factor should fix overexposure when using\nzero terminal SNR. This is supported for basic text to image generation when using --model-type\n\"torch\" but not inpainting, img2img, or --control-nets. When using --model-type \"torch-sdxl\" it is\nsupported for basic generation, inpainting, and img2img, unless --control-nets is specified in which\ncase only inpainting is supported. It is supported for --model-type \"torch-sdxl-pix2pix\" but not\n--model-type \"torch-pix2pix\". (default: [0.0])", "--inference-steps": "One or more inference steps values to try. The amount of inference (de-noising) steps effects image\nclarity to a degree, higher values bring the image closer to what the AI is targeting for the\ncontent of the image. Values between 30-40 produce good results, higher values may improve image\nquality and or change image content. (default: [30])", "--cache-memory-constraints": "Cache constraint expressions describing when to clear all model caches automatically\n(DiffusionPipeline, UNet, VAE, ControlNet, and Text Encoder) considering current memory usage. If\nany of these constraint expressions are met all models cached in memory will be cleared. Example,\nand default value: \"used_percent > 70\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.CACHE_MEMORY_CONSTRAINTS]", "--pipeline-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory DiffusionPipeline\ncache considering current memory usage, and estimated memory usage of new models that are about to\nenter memory. If any of these constraint expressions are met all DiffusionPipeline objects cached in\nmemory will be cleared. Example, and default value: \"pipeline_size > (available * 0.75)\" For Syntax\nSee:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.PIPELINE_CACHE_MEMORY_CONSTRAINTS]", "--unet-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory UNet cache\nconsidering current memory usage, and estimated memory usage of new UNet models that are about to\nenter memory. If any of these constraint expressions are met all UNet models cached in memory will\nbe cleared. Example, and default value: \"unet_size > (available * 0.75)\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.UNET_CACHE_MEMORY_CONSTRAINTS]", "--vae-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory VAE cache\nconsidering current memory usage, and estimated memory usage of new VAE models that are about to\nenter memory. If any of these constraint expressions are met all VAE models cached in memory will be\ncleared. Example, and default value: \"vae_size > (available * 0.75)\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.VAE_CACHE_MEMORY_CONSTRAINTS]", "--control-net-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory ControlNet cache\nconsidering current memory usage, and estimated memory usage of new ControlNet models that are about\nto enter memory. If any of these constraint expressions are met all ControlNet models cached in\nmemory will be cleared. Example, and default value: \"controlnet_size > (available * 0.75)\" For\nSyntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.CONTROLNET_CACHE_MEMORY_CONSTRAINTS]", "--text-encoder-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory Text Encoder cache\nconsidering current memory usage, and estimated memory usage of new Text Encoder models that are\nabout to enter memory. If any of these constraint expressions are met all Text Encoder models cached\nin memory will be cleared. Example, and default value: \"text_encoder_size > (available * 0.75)\" For\nSyntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.TEXT_ENCODER_CACHE_MEMORY_CONSTRAINTS]", "--image-encoder-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory Image Encoder\ncache considering current memory usage, and estimated memory usage of new Image Encoder models that\nare about to enter memory. If any of these constraint expressions are met all Image Encoder models\ncached in memory will be cleared. Example, and default value: \"image_encoder_size > (available *\n0.75)\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.IMAGE_ENCODER_CACHE_MEMORY_CONSTRAINTS]", "--adapter-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory T2I Adapter cache\nconsidering current memory usage, and estimated memory usage of new T2I Adapter models that are\nabout to enter memory. If any of these constraint expressions are met all T2I Adapter models cached\nin memory will be cleared. Example, and default value: \"adapter_size > (available * 0.75)\" For\nSyntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.ADAPTER_CACHE_MEMORY_CONSTRAINTS]", "--transformer-cache-memory-constraints": "Cache constraint expressions describing when to automatically clear the in memory Transformer cache\nconsidering current memory usage, and estimated memory usage of new Transformer models that are\nabout to enter memory. If any of these constraint expressions are met all Transformer models cached\nin memory will be cleared. Example, and default value: \"transformer_size > (available * 0.75)\" For\nSyntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.pipelinewrapper.TRANSFORMER_CACHE_MEMORY_CONSTRAINTS]", "--image-processor-memory-constraints": "Cache constraint expressions describing when to automatically clear the entire in memory diffusion\nmodel cache considering current memory usage, and estimated memory usage of new image processor\nmodels that are about to enter memory. If any of these constraint expressions are met all diffusion\nrelated models cached in memory will be cleared. Example, and default value: \"processor_size >\n(available * 0.70)\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.imageprocessors.IMAGE_PROCESSOR_MEMORY_CONSTRAINTS]", "--image-processor-cuda-memory-constraints": "Cache constraint expressions describing when to automatically clear the last active diffusion model\nfrom VRAM considering current GPU memory usage, and estimated GPU memory usage of new image\nprocessor models that are about to enter VRAM. If any of these constraint expressions are met the\nlast active diffusion model in VRAM will be destroyed. Example, and default value: \"processor_size >\n(available * 0.70)\" For Syntax See:\n[https://dgenerate.readthedocs.io/en/v4.5.1/dgenerate_submodules.html#dgenerate.imageprocessors.IMAGE_PROCESSOR_CUDA_MEMORY_CONSTRAINTS]"}