{"\\help": "help:\n\n    dgenerate --help\n\n    Alias for --help\n\n====================", "\\templates_help": "templates_help:\n\n    Prints all template variables in the global scope, with their types and values.\n\n    Providing template variable names as arguments prints just information about those template variables.\n\n    This does not cause the config to exit.\n\n==========================================================================================================", "\\directives_help": "directives_help:\n\n    Prints all directives.\n\n    Providing directive names as arguments prints documentation for those directives.\n\n    This does not cause the config to exit.\n\n=====================================================================================", "\\functions_help": "functions_help:\n\n    Prints all template functions.\n\n    Providing function names as arguments prints documentation for those functions.\n\n    This does not cause the config to exit.\n\n===================================================================================", "\\image_processor_help": "image_processor_help:\n\n    Prints all image processor names. Alias for --image-processor-help\n\n    Providing processor names as arguments prints documentation for those processors.\n\n    This does not cause the config to exit.\n\n=====================================================================================", "\\prompt_weighter_help": "prompt_weighter_help:\n\n    Prints all prompt weighter names. Alias for --prompt-weighter-help\n\n    Providing prompt weighter names as arguments prints documentation for those prompt weighters.\n\n    This does not cause the config to exit.\n\n=================================================================================================", "\\prompt_upscaler_help": "prompt_upscaler_help:\n\n    Prints all prompt upscaler names. Alias for --prompt-upscaler-help\n\n    Providing prompt upscaler names as arguments prints documentation for those prompt upscalers.\n\n    This does not cause the config to exit.\n\n=================================================================================================", "\\clear_object_cache": "clear_object_cache:\n\n    Clear a specific dgenerate object cache, such as: unet, vae, text_encoder, etc.\n\n    Calling with no arguments clears all object caches.\n\n    See: \\list_object_caches, for a list of valid object cache names.\n\n===================================================================================", "\\list_object_caches": "list_object_caches:\n\n    List object cache names that may be cleared with \\clear_object_cache.\n\n=========================================================================", "\\clear_device_cache": "clear_device_cache:\n\n    Clear any objects cached by dgenerate that may actively exist on an accelerator device.\n\n    You must specify the device or devices as arguments.\n\n===========================================================================================", "\\save_modules": "save_modules:\n\n    Save a set of pipeline modules off the last diffusers pipeline used for the main model of a dgenerate invocation. The first argument is a variable\n    name that the modules will be saved to, which can be reference later with \\use_modules. The rest of the arguments are names of pipeline modules\n    that you want to save to this variable as a set of modules that are kept together, usable names are: unet, vae, transformer, text_encoder,\n    text_encoder_2, text_encoder_3, tokenizer, tokenizer_2, tokenizer_3, safety_checker, feature_extractor, controlnet, scheduler, unet\n\n======================================================================================================================================================", "\\use_modules": "use_modules:\n\n    Use a set of pipeline modules saved with \\save_modules, accepts one argument, the name that set of modules was saved to.\n\n============================================================================================================================", "\\clear_modules": "clear_modules:\n\n    Clears a named set of pipeline modules saved with \\save_modules, accepts one argument, the name that the set of modules was saved to. When no\n    argument is provided, all modules ever saved are cleared.\n\n=================================================================================================================================================", "\\gen_seeds": "gen_seeds:\n\n    Generate N random integer seeds (as strings) and store them as a list to a template variable name.\n\n    The first argument is the variable name, the second argument is the number of seeds to generate.\n\n======================================================================================================", "\\download": "download:\n\n    Download a file from a URL to the web cache or a specified path, and assign the file path to a template variable.\n\n    \\download my_variable https://modelhost.com/model.safetensors\n\n    \\download my_variable https://modelhost.com/model.safetensors -o model.safetensors\n\n    \\download my_variable https://modelhost.com/model.safetensors -o directory/\n\n    When an --output path is specified, if the file already exists it will be reused by default (simple caching behavior), this can be disabled with\n    -x/--overwrite indicating that the file should always be downloaded.\n\n    -x/--overwrite can also be used to overwrite cached files in the dgenerate web cache.\n\n    An error will be raised by default if a text mimetype is encountered, this can be overridden with -t/--text\n\n    Be weary that if you have a long-running loop in your config using a top level jinja template, which refers to your template variable, cache\n    expiry may invalidate the file stored in your variable.\n\n    You can rectify this by putting the download directive inside of your processing loop so that the file is simply re-downloaded.\n\n    Or you may be better off using the download template function which provides this functionality as a template function.\n\n    For usage see: \\download --help\n\n====================================================================================================================================================", "\\pwd": "pwd:\n\n    Print the current working directory.\n\n========================================", "\\ls": "ls:\n\n    List directory contents.\n\n    Basic implementation of the Unix 'ls' command, accepts the argument -l and -a\n\n    Also accepts -la or -al\n\n=================================================================================", "\\cd": "cd:\n\n    Change the current working directory.\n\n    Takes one argument, the directory to change to.\n\n===================================================", "\\pushd": "pushd:\n\n    Push the current working directory on to the directory stack and change to the specified directory.\n\n    Takes one argument, the directory to change to.\n\n=======================================================================================================", "\\popd": "popd:\n\n    Pop the last directory of the directory stack and change to that directory.\n\n===============================================================================", "\\exec": "exec:\n\n    Execute a shell command line as a new process or processes.\n\n    The pipe | operator is supported for piping to standard input, as well as bash file redirection syntax.\n\n    The following redirection operators are supported:\n\n        '<'   : Read into stdin\n        '>'   : stdout to file\n        '1>'  : stdout to file\n        '2>'  : stderr to file\n        '&>'  : stdout & stderr to file\n        '>>'  : append stdout to file\n        '1>>' : append stdout to file\n        '2>>' : append stderr to file\n        '&>>' : append stout & stderr to file\n        '2>&1': redirect stderr to stdout\n        '1>&2': redirect stdout to stderr\n\n    Examples:\n\n        \\exec dgenerate < my_config.dgen &> log.txt\n        \\exec dgenerate < my_config.dgen > log.txt 2>&1\n        \\exec dgenerate < my_config.dgen > stdout.txt 2> stderr.txt\n\n    Windows cat pipe:\n\n        \\exec cmd /c \"type my_config.dgen\" | dgenerate &> test.log\n\n    Linux cat pipe:\n\n        \\exec cat my_config.dgen | dgenerate &> test.log\n\n===========================================================================================================", "\\mv": "mv:\n\n    Move a file or directory to a new location on disk.\n\n    First argument is the source, second argument is the destination.\n\n=====================================================================", "\\cp": "cp:\n\n    Copy a file or directory to a new location on disk.\n\n    First argument is the source, second argument is the destination.\n\n=====================================================================", "\\mkdir": "mkdir:\n\n    Create a directory or directory tree.\n\n    Basic implementation of the Unix 'mkdir' command.\n\n    Supports the -p / --parents argument.\n\n    See: \\mkdir --help\n\n=====================================================", "\\rmdir": "rmdir:\n\n    Remove one or more directories.\n\n    Basic implementation of the Unix 'rmdir' command.\n\n    Supports basic POSIX arguments.\n\n    See: \\rmdir --help\n\n=====================================================", "\\rm": "rm:\n\n    Remove Files.\n\n    Basic implementation of the Unix 'rm' command.\n\n    Supports basic POSIX arguments.\n\n    See: \\rm --help\n\n==================================================", "\\exit": "exit:\n\n    Causes the dgenerate process to exit with a specific return code. This directive accepts one argument, the return code, which is optional and 0 by\n    default. It must be an integer value.\n\n======================================================================================================================================================", "\\prompt_upscale": "prompt_upscale:\n\n    Alias for: --sub-command prompt-upscale, with the additional option to set a config template variable to a python list of upscaled prompt strings.\n\n    This allows upscaling prompts without performing diffusion.\n\n    You can use the additional option --setp to set a config template variable with the output of the subcommand, this will set the template variable\n    to a python list of upscaled prompt strings, similar to the behavior of \\setp.\n\n    This additional option disables all --sub-command prompt-upscale options except \"prompts\", --help, and --upscaler.\n\n    See: \\prompt_upscale --help\n\n    This does not cause the config to exit.\n\n======================================================================================================================================================", "\\civitai_links": "civitai_links:\n\n    Alias for: --sub-command civitai-links\n\n    This allows listing all the hard links to models on a CivitAI model page.\n\n    See: \\civitai_links --help\n\n    This does not cause the config to exit.\n\n=============================================================================", "\\to_diffusers": "to_diffusers:\n\n    Alias for: --sub-command to-diffusers\n\n    Convert single file diffusion model checkpoints from CivitAI and elsewhere into diffusers format (a folder on disk with configuration).\n\n    This can be useful if you want to load a single file checkpoint with quantization.\n\n    You may also save models loaded from Hugging Face repos.\n\n    Examples:\n\n    \\to_diffusers \"all_in_one.safetensors\" --model-type torch --output model_directory\n\n    \\to_diffusers \"https://modelsite.com/all_in_one.safetensors\" --model-type torch-sdxl --output model_directory\n\n    See: \\to_diffusers --help\n\n    This does not cause the config to exit.\n\n===========================================================================================================================================", "\\image_process": "image_process:\n\n    Allows access to \"dgenerate --sub-command image-process\" through a config directive.\n\n    See: \"dgenerate --sub-command image-process --help\" for recognized arguments.\n\n    Or within a config file: \"\\image_process --help\"\n\n========================================================================================", "\\import_plugins": "import_plugins:\n\n    Imports plugins from within a config, this imports config plugins as well as image processor plugins. This has an identical effect to the\n    --plugin-modules argument. You may specify multiple plugin module directories or python files containing plugin implementations, you may also\n    specify modules that are installed in the python environment by name.\n\n================================================================================================================================================="}