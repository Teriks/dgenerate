#! /usr/bin/env dgenerate --file
#! dgenerate 3.10.0

\set token %HF_TOKEN%

{% if not token.strip() and not '--auth-token' in injected_args %}
    \print Set HF_TOKEN environmental variable or --auth-token to run this example!
    \exit
{% endif %} !END


# Deep Floyd IF consist of 3 stages, an initial stage that produces a 64x64 image, a second stage that takes
# that image and scales it to 256x265, and a third stage that takes that image and x4 scales it to 1024x1024

# The first stage can be invoked with the --model-type torch-ifs

DeepFloyd/IF-I-M-v1.0
--variant fp16
--dtype float16
--model-type torch-if
--model-sequential-offload
--inference-steps 60
--guidance-scales 7
--output-size 64
--gen-seeds 2
--prompts "ultra close-up color photo portrait of rainbow owl with deer horns in the woods"
--output-prefix stage1
--safety-checker

# We can save certain modules from the diffusers pipeline used in the last invocation
# for reuse in later invocations using the \save_modules directive, a group of modules
# can be saved to a single variable name, in this case the variable name is "stage_1_modules"
# and we are saving the "feature_extractor" and "safety_checker" modules from the pipeline
# used in the invocation above.

\save_modules stage_1_modules feature_extractor safety_checker

# valid module names are:
#
#  'vae'
#  'text_encoder'
#  'text_encoder_2'
#  'tokenizer'
#  'tokenizer_2'
#  'safety_checker'
#  'feature_extractor'
#  'controlnet'
#  'scheduler'
#  'unet'


DeepFloyd/IF-II-M-v1.0
--variant fp16
--dtype float16
--model-type torch-ifs
--model-sequential-offload
--inference-steps 30
--guidance-scales 4
--prompts {{ format_prompt(last_prompts) }}
--seeds {{ last_seeds | join(' ') }}
--seeds-to-images
--image-seeds {{ quote(last_images) }}
--output-prefix stage2
--safety-checker


# \use_modules can be used to indicate that the next invocation should
# use a set of modules that we have saved to a variable name, in this case
# modules from the first stage of Deep Floyd.

\use_modules stage_1_modules

stabilityai/stable-diffusion-x4-upscaler
--variant fp16
--dtype float16
--model-type torch-upscaler-x4
--inference-steps 30
--guidance-scales 9.00
--prompts {{ format_prompt(last_prompts) }}
--seeds {{ last_seeds | join(' ') }}
--seeds-to-images
--image-seeds {{ quote(last_images) }}
--upscaler-noise-levels 20
--output-prefix stage3

# Notice that --safety-checker is not used on the invocation above,
# it is not neccessary because we are using the saved "safety_checker" module from
# stage 1, which implicitly enables it in the invocation above because it was
# enabled and loaded for the stage 1 invocation.

\clear_modules

# You should use \clear_modules when you are are sure you are not going to need the
# modules for reuse any longer, because they are models and or objects that may consume a
# non insignificant amount of memory and they will not leave memory until you clear them.
# If dgenerate is going to exit immediately and nothing else is in your config, this is not
# a problem, but if there are more invocations in your config after you are done using the
# saved modules, you should clear them to save memory.
