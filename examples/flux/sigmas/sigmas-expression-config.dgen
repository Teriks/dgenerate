#! /usr/bin/env dgenerate --file
#! dgenerate 5.0.0

\set token %HF_TOKEN%

{% if not token.strip() and not '--auth-token' in injected_args %}
    \print Set HF_TOKEN environmental variable or --auth-token to run this example!
    \exit
{% endif %}

{% if have_cuda() and have_feature('bitsandbytes') and total_memory(unit='gib') > 15 %}
    \set optimization --quantizer bnb;bits=4
{% else %}
    \set optimization --model-sequential-offload
{% endif %}

# Use a sigmas expression to scale the sigmas from Flux's scheduler

# we can pass expressions that act on the sigmas generated by
# the selected --scheduler, for instance, we can scale the "sigmas"
# calculated by the scheduler by 0.95, the "sigmas" variable
# is represented as a numpy array, this expression parser
# uses asteval, numpy functions are available through the
# namespace 'np' which is imported by default

# You may also use python builtins such as "max", "min" etc.

black-forest-labs/FLUX.1-dev
--model-type flux {{ auth_token }} {{ optimization }}
--dtype bfloat16
--inference-steps 50
--guidance-scales 3.5
--gen-seeds 1
--sigmas "expr: sigmas * 0.95"
--output-path sigmas_expr
--output-size 1024x1024
--prompts "a horse standing inside a barn"