#! /usr/bin/env dgenerate --file
#! dgenerate 5.0.0

# The \sete directive performs full shell parsing just like \echo, the difference
# is that instead of just printing the parsed tokens back, it assigns
# them to a template variable as a python array.

# You can use this to expand shell globs into a
# template variable as a python array, among other things.


\sete my_variable --argument ./*

# prints the python array ['--argument', 'file1', 'file2', ...]

\print {{ my_variable }}

# Templates and environmental variable references
# are also parsed in the \sete directive, just as they are with \set

\set directory .

\sete my_variable --argument {{ directory }}/*

# indirect expansion is allowed

\set var_name template_variable
\env ENV_VAR_NAMED=env_var_named

\sete {{ var_name }} ./*
\sete $ENV_VAR_NAMED ./*

# print everything in this directory,
# they will be printed as a python array
# IE: ['file1', 'file2', ...]

\print {{ template_variable }}
\print {{ env_var_named }}