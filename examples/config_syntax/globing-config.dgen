#! /usr/bin/env dgenerate --file
#! dgenerate 3.9.1

# globbing can be preformed via shell expansion or using
# the glob module inside jinja templates

# note that shell globbing and home directory expansion
# does not occur inside quoted strings

# \echo can be use to show the results of globbing that
# occurs during shell expansion, \print does not preform shell expansion

# shell globs which produce 0 files are considered an error

\echo ../media/*.png

\echo ~

# \sete can be used to set a template variable to the result
# of one or more shell globs

\sete myfiles ../media/*.png


# with Jinja2:


# The most basic usage is full expansion of every file

\set myfiles {{ quote(glob.glob('../media/*.png')) }}

\print {{ myfiles }}

# If you have a LOT of files, you may want to
# process them using an iterator like so

{% for file in glob.iglob('../media/*.png') %}
    \print {{ quote(file) }}
{% endfor %} !END

# usage of os.path via path

\print {{ path.abspath('.') }}

# Simple inline usage

stabilityai/stable-diffusion-2-1
--variant fp16
--dtype float16
--prompts "In the style of picaso"
--image-seeds {{ quote(glob.glob('../media/*.png')) }}
--output-path {{ quote(path.join(path.abspath('.'), 'output')) }}

# equivalent

stabilityai/stable-diffusion-2-1
--variant fp16
--dtype float16
--prompts "In the style of picaso"
--image-seeds ../media/*.png
--output-path ./output