#! /usr/bin/env dgenerate --file
#! dgenerate 5.0.0

{% if "--output-metadata" in injected_args %}
    \set _ {{ injected_args.remove("--output-metadata") }}
{% endif %}


# Using --denoising-end and --denoising-start we can split
# the denoising process of a Stable Diffusion pipeline into two stages,
# allowing us to pass the latents from the first stage to the second stage.

# These latents must be passed in as raw latents using a special --image-seeds
# syntax.  This is different from the SDXL refiner example, where we passed
# the latents in as img2img input.

# The first pipeline will denoise the latents up to 80 percent, and then
# the second pipeline will denoise the latents the rest of the way

# The output formats "pt", "pth", and "safetensors" are supported



# how much denoising to apply in the first stage
# or rather how many inference steps out of the total

\set high_noise_fraction 0.80

\set steps 30


stable-diffusion-v1-5/stable-diffusion-v1-5
--inference-steps {{ steps }}
--guidance-scales 5
--gen-seeds 1
--output-size 768
--image-format pt
--output-path cooperative
--denoising-end {{ high_noise_fraction }}
--prompts "a beautiful sunset over the mountains"

# Use the --image-seeds "latents: ..." syntax to pass the latents

# If there is additional img2img / mask data we want to pass in,
# we could potentially use the --image-seeds "img2img.png;latents=..." syntax
# to pass the latents along side the images if desired, in this case we are
# simply using the latents in txt2img mode as a starting point for the second
# pipeline.

Lykon/DreamShaper
--inference-steps {{ steps }}
--guidance-scales 5
--gen-seeds 1
--output-size 768
--output-path cooperative
--image-seeds "latents: {{ quote(last_images) }}"
--denoising-start {{ high_noise_fraction }}
--prompts "clouds in the sky on a sunny day"