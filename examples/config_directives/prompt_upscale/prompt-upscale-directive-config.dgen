#! /usr/bin/env dgenerate --file
#! dgenerate 5.0.0

# The prompt_upscale directive can be use to upscale prompts with prompt upscaler plugins,
# without preforming any image generation. This directive is designed in the same
# vein as dgenerate --sub-command image-process and the \image_process directive

# It allows you to output the prompts in various formats such as plain text
# with optional quoting, or as structured json, toml, and yaml.
# The prompts can be written to a file or printed to stdout.

# You can also use the --setp option to set a template variable to a python list of generated prompts.

# upscaler chaining is supported by this directive just as with dgenerate --prompt-upscaler

# The first arguments are the prompts to be upscaled, you must specify an upscaler or upscaler chain with --upscaler

# See: \directives_help prompt_upscale, and \prompt_upscale --help
# From the command line, this is: dgenerate --sub-command-help prompt-upscale,
# and dgenerate --sub-command prompt-upscale --help


# print generated prompts to stdout line by line, with dgenerate config style shell quoting
# the default quoting is "none", which prints the raw string, this may not be ideal if your
# prompt contains multiple lines and you wish to do something with it other programmatically
# than just view it. You may also use --quote shell, which uses shlex.quote for posix
# shell quoting (bash, etc.).

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt --quote dgenerate


# You can write your prompts to a structured file if desired, using -o/--output and -of/--output-format

# write 5 magicprompt variations to a toml file:

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt;variations=5 -o prompts.toml -of toml

# write 5 magicprompt variations to a json file:

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt;variations=5 -o prompts.json -of json

# write 5 magicprompt variations to a yaml file:

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt;variations=5 -o prompts.yaml -of yaml


# You may also print structured output to stdout with -of/--output-format
# This prints yaml to stdout, this works for json, and toml as well:

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt;variations=5 -of yaml


# The --setp option allows you to set a template variable to a python list of generated prompts.
# Set a template variable to a list of raw prompt strings:

\prompt_upscale "a cat sitting on a bench in a park" --upscaler magicprompt;variations=5 --setp prompts_variable

# print the python list

\print {{ prompts_variable }}

# multiple prompts can be upscaled

\prompt_upscale "a cat sitting on a bench in a park" "a dog sitting on a park bench" --upscaler magicprompt;variations=5 --setp prompts_variable

\print {{ prompts_variable }}